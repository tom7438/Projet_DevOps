name: Check Code Coverage
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
  pull_request:
    branches:
      - main

jobs:
  check-coverage:
    name: Check Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Sp√©cifiez ici la version de Java que vous utilisez
          distribution: 'adopt'  # Sp√©cifiez la distribution de Java

      # Ex√©cuter les tests
      - name: Run tests
        run: mvn test

      # V√©rifier la couverture du code
      - name: Check code coverage
        run: mvn jacoco:check@jacoco-check

      # T√©l√©charger et ex√©cuter le script Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: tom7438/projetdevops

  publish-jar:
    needs: [check-coverage]
    name: publish library jar to Github Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'  # Sp√©cifiez ici la version de Java que vous utilisez
          distribution: 'adopt'  # Sp√©cifiez la distribution de Java

      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

  publish-docker-image:
    needs: [check-coverage]
    name: publish docker image to Github Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/rtl2_datalibrary:latest .

      - name: Publish docker image
        run: docker push docker.pkg.github.com/${{ github.repository }}/rtl2_datalibrary:latest
